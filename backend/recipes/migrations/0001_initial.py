# Generated by Django 5.2.7 on 2025-10-04 18:10

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Recipe title', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Recipe description')),
                ('prep_time', models.PositiveIntegerField(blank=True, help_text='Preparation time in minutes', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('cook_time', models.PositiveIntegerField(blank=True, help_text='Cooking time in minutes', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_time', models.PositiveIntegerField(blank=True, help_text='Total time in minutes', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('servings', models.PositiveIntegerField(blank=True, help_text='Number of servings', null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('instructions', models.JSONField(default=list, help_text='List of cooking instructions')),
                ('categories', models.JSONField(default=list, help_text='Recipe categories')),
                ('tags', models.JSONField(default=list, help_text='Recipe tags')),
                ('source', models.CharField(choices=[('pdf', 'PDF Import'), ('manual', 'Manual Entry'), ('database', 'Database Import')], default='manual', help_text='Source of the recipe', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['title'], name='recipes_rec_title_9ebae8_idx'), models.Index(fields=['source'], name='recipes_rec_source_b6db08_idx'), models.Index(fields=['created_at'], name='recipes_rec_created_a55f59_idx')],
            },
        ),
        migrations.CreateModel(
            name='SourceMetadata',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('original_filename', models.CharField(blank=True, help_text='Original filename of imported file', max_length=255)),
                ('file_size', models.PositiveIntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('page_count', models.PositiveIntegerField(blank=True, help_text='Number of pages in PDF', null=True)),
                ('import_date', models.DateTimeField(auto_now_add=True)),
                ('import_success', models.BooleanField(default=True)),
                ('import_warnings', models.JSONField(default=list, help_text='List of warnings during import')),
                ('import_errors', models.JSONField(default=list, help_text='List of errors during import')),
                ('raw_text', models.TextField(blank=True, help_text='Raw text extracted from source')),
                ('recipe', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='source_metadata', to='recipes.recipe')),
            ],
            options={
                'verbose_name': 'Source Metadata',
                'verbose_name_plural': 'Source Metadata',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Ingredient name', max_length=200)),
                ('amount', models.CharField(blank=True, help_text="Amount (e.g., '2 cups', '1 tbsp')", max_length=50)),
                ('unit', models.CharField(blank=True, help_text='Unit of measurement', max_length=50)),
                ('notes', models.CharField(blank=True, help_text="Additional notes (e.g., 'chopped', 'optional')", max_length=200)),
                ('category', models.CharField(choices=[('produce', 'Produce'), ('meat', 'Meat & Seafood'), ('dairy', 'Dairy & Eggs'), ('pantry', 'Pantry'), ('frozen', 'Frozen'), ('bakery', 'Bakery'), ('beverages', 'Beverages'), ('condiments', 'Condiments & Sauces'), ('spices', 'Spices & Seasonings'), ('other', 'Other')], default='other', help_text='Ingredient category for shopping list organization', max_length=20)),
                ('order', models.PositiveIntegerField(default=0)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='recipes.recipe')),
            ],
            options={
                'ordering': ['order', 'name'],
                'indexes': [models.Index(fields=['recipe', 'order'], name='recipes_ing_recipe__71db0f_idx'), models.Index(fields=['name'], name='recipes_ing_name_164c6a_idx'), models.Index(fields=['category'], name='recipes_ing_categor_b99d8e_idx')],
            },
        ),
    ]
